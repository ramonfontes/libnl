# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _capi
else:
    import _capi

try:
    import builtins as __builtin__
except ImportError:
    import builtins

_swig_new_instance_method = _capi.SWIG_PyInstanceMethod_New
_swig_new_static_method = _capi.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


genl_ctrl_alloc_cache = _capi.genl_ctrl_alloc_cache
genl_ctrl_search = _capi.genl_ctrl_search
genl_ctrl_search_by_name = _capi.genl_ctrl_search_by_name
genl_ctrl_resolve = _capi.genl_ctrl_resolve
genl_ctrl_resolve_grp = _capi.genl_ctrl_resolve_grp
genl_family_alloc = _capi.genl_family_alloc
genl_family_put = _capi.genl_family_put
genl_family_get_id = _capi.genl_family_get_id
genl_family_set_id = _capi.genl_family_set_id
genl_family_get_name = _capi.genl_family_get_name
genl_family_set_name = _capi.genl_family_set_name
genl_family_get_version = _capi.genl_family_get_version
genl_family_set_version = _capi.genl_family_set_version
genl_family_get_hdrsize = _capi.genl_family_get_hdrsize
genl_family_set_hdrsize = _capi.genl_family_set_hdrsize
genl_family_get_maxattr = _capi.genl_family_get_maxattr
genl_family_set_maxattr = _capi.genl_family_set_maxattr
genl_family_add_op = _capi.genl_family_add_op
genl_family_add_grp = _capi.genl_family_add_grp
class genlmsghdr(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    cmd = property(_capi.genlmsghdr_cmd_get, _capi.genlmsghdr_cmd_set)
    version = property(_capi.genlmsghdr_version_get, _capi.genlmsghdr_version_set)
    reserved = property(_capi.genlmsghdr_reserved_get, _capi.genlmsghdr_reserved_set)
    __swig_destroy__ = _capi.delete_genlmsghdr

# Register genlmsghdr in _capi:
_capi.genlmsghdr_swigregister(genlmsghdr)

genl_connect = _capi.genl_connect
genlmsg_hdr = _capi.genlmsg_hdr
genlmsg_put = _capi.genlmsg_put
class nlattr(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _capi.delete_nlattr

# Register nlattr in _capi:
_capi.nlattr_swigregister(nlattr)

class nla_policy(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    type = property(_capi.nla_policy_type_get, _capi.nla_policy_type_set)
    minlen = property(_capi.nla_policy_minlen_get, _capi.nla_policy_minlen_set)
    maxlen = property(_capi.nla_policy_maxlen_get, _capi.nla_policy_maxlen_set)
    __swig_destroy__ = _capi.delete_nla_policy

# Register nla_policy in _capi:
_capi.nla_policy_swigregister(nla_policy)

py_genlmsg_parse = _capi.py_genlmsg_parse


